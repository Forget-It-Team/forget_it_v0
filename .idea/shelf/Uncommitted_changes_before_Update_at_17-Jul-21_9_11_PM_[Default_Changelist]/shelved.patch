Index: app/src/main/java/com/example/android/forget_it_v0/adapter/UpcomingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.android.forget_it_v0.adapter\r\n\r\nimport android.content.Intent\r\nimport android.os.Handler\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.animation.Animation\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.LinearLayout\r\nimport android.widget.TextView\r\nimport androidx.cardview.widget.CardView\r\nimport androidx.core.view.isVisible\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.airbnb.lottie.LottieAnimationView\r\nimport com.example.android.forget_it_v0.AuthenticationActivity\r\nimport com.example.android.forget_it_v0.R\r\nimport com.example.android.forget_it_v0.models.Pending\r\nimport com.example.android.forget_it_v0.models.RecyclerViewOnClick\r\nimport pl.droidsonroids.gif.GifImageButton\r\nimport pl.droidsonroids.gif.GifImageView\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"Deprecation\")\r\nclass UpcomingAdapter (var list: ArrayList<Pending>, var listener : RecyclerViewOnClick):\r\n    RecyclerView.Adapter<UpcomingAdapter.UpcomingViewHolder>() {\r\n    inner class UpcomingViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        var name: TextView = itemView.findViewById(R.id.rv_home_contact_name)\r\n        var reminder: TextView = itemView.findViewById(R.id.rv_reminder)\r\n        var date: TextView = itemView.findViewById(R.id.rv_date)\r\n        var parent_layout: LinearLayout = itemView.findViewById(R.id.upcoming_rv_parent_layout)\r\n        var button_markDone : CardView = itemView.findViewById(R.id.rv_markDone)\r\n        var buttonDelete : CardView = itemView.findViewById(R.id.rv_delete)\r\n        var info: GifImageButton = itemView.findViewById(R.id.infoUpcoming_rv)\r\n\r\n        var image: ImageView = itemView.findViewById(R.id.rv_home_image)\r\n        val personGif : IntArray = intArrayOf(\r\n            R.drawable.pokone,\r\n            R.drawable.poktwo,\r\n            R.drawable.pokthree,\r\n            R.drawable.pokfour,\r\n            R.drawable.pokfive,\r\n            R.drawable.poksix,\r\n            R.drawable.pokseven,\r\n            R.drawable.pokeight,\r\n            R.drawable.poknine,\r\n            R.drawable.pokten,\r\n            R.drawable.pokeleven,\r\n            R.drawable.poktwelve,\r\n            R.drawable.pokthirteen,\r\n        )\r\n        val random = Random\r\n\r\n        fun populate(pending: Pending) {\r\n            name.text = pending.name\r\n            val remin = pending.task.split(\";\").toTypedArray()\r\n            val title = remin[0]\r\n            val desc = remin[1]\r\n            Log.d(\"title\", remin[0]+\"+\"+remin[1])\r\n            reminder.text = pending.task\r\n            image.setImageResource(personGif[random.nextInt(personGif.size)])\r\n\r\n            var dateTimeText = pending.date.toString()\r\n            dateTimeText = dateTimeText.replace(\"-\", \"/\")\r\n            dateTimeText = dateTimeText.replace(\"T\", \", \")\r\n\r\n            date.text = dateTimeText\r\n\r\n            if (pending.pastDeadline) {\r\n                parent_layout.setBackgroundResource(R.drawable.upcoming_rv_border_red)\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    fun updateList(newList: ArrayList<Pending>) {\r\n        list.clear()\r\n        list.addAll(newList)\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): UpcomingViewHolder {\r\n        val inflater = LayoutInflater.from(parent.context)\r\n            .inflate(R.layout.upcoming_rv, parent, false)\r\n        return UpcomingViewHolder(inflater)\r\n    }\r\n\r\n    override fun getItemCount() = list.size\r\n\r\n    override fun onBindViewHolder(holder: UpcomingViewHolder, position: Int) {\r\n        val item = list[position]\r\n        holder.populate(item)\r\n\r\n\r\n        holder.button_markDone.setOnClickListener {\r\n            listener.onClick(holder.button_markDone, item)\r\n\r\n        holder.info.setOnClickListener{\r\n            listener.onClick(holder.info,item)\r\n        }\r\n\r\n\r\n\r\n        holder.buttonDelete.setOnClickListener {\r\n            listener.onClick(holder.buttonDelete, item)\r\n        }\r\n//\r\n    }\r\n}}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/android/forget_it_v0/adapter/UpcomingAdapter.kt	(revision 8b85adf6a71f8a130c0eff3843d0684294128a56)
+++ app/src/main/java/com/example/android/forget_it_v0/adapter/UpcomingAdapter.kt	(date 1626532875046)
@@ -97,6 +97,7 @@
 
         holder.button_markDone.setOnClickListener {
             listener.onClick(holder.button_markDone, item)
+        }
 
         holder.info.setOnClickListener{
             listener.onClick(holder.info,item)
@@ -109,4 +110,4 @@
         }
 //
     }
-}}
\ No newline at end of file
+}
\ No newline at end of file
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_17-07-2021_19_08__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_17-07-2021_19_08__Default_Changelist_.xml
