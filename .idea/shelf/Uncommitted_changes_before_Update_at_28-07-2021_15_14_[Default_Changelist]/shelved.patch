Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <!-- Base application theme. -->\r\n    <style name=\"Theme.ForgetitV0\" parent=\"Theme.MaterialComponents.Light.NoActionBar\">\r\n        <!-- Primary brand color. -->\r\n        <item name=\"colorPrimary\">#7BA7C8</item>\r\n        <item name=\"colorPrimaryVariant\">#072337</item>\r\n        <item name=\"colorOnPrimary\">@color/white</item>\r\n        <!-- Secondary brand color. -->\r\n        <item name=\"colorSecondary\">@color/teal_200</item>\r\n        <item name=\"colorSecondaryVariant\">@color/teal_700</item>\r\n        <item name=\"colorOnSecondary\">@color/black</item>\r\n        <!-- Status bar color. -->\r\n        <item name=\"android:statusBarColor\" tools:targetApi=\"l\">?attr/colorPrimaryVariant</item>\r\n        <!-- Customize your theme here. -->\r\n    </style>\r\n    <style name=\"loginUI\" parent=\"Theme.MaterialComponents.Light.NoActionBar\">\r\n        <item name=\"android:windowBackground\" type=\"drawable\">@drawable/logo</item>\r\n    </style>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/themes.xml	(revision ab01aa50effc130ff44ceb44328d927b5bc865f7)
+++ app/src/main/res/values/themes.xml	(date 1627458624651)
@@ -14,6 +14,17 @@
         <!-- Customize your theme here. -->
     </style>
     <style name="loginUI" parent="Theme.MaterialComponents.Light.NoActionBar">
-        <item name="android:windowBackground" type="drawable">@drawable/logo</item>
+        <!-- Primary brand color. -->
+        <item name="colorPrimary">#7BA7C8</item>
+        <item name="colorPrimaryVariant">#072337</item>
+        <item name="colorOnPrimary">@color/white</item>
+        <!-- Secondary brand color. -->
+        <item name="colorSecondary">@color/teal_200</item>
+        <item name="colorSecondaryVariant">@color/teal_700</item>
+        <item name="colorOnSecondary">@color/black</item>
+        <!-- Status bar color. -->
+        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
+        <!-- Customize your theme here. -->
+        <item name="android:windowBackground" type="">@drawable/loginscreentheme</item>
     </style>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/android/forget_it_v0/adapter/UpcomingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.android.forget_it_v0.adapter\r\n\r\nimport android.content.Intent\r\nimport android.os.Handler\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.animation.Animation\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.LinearLayout\r\nimport android.widget.TextView\r\nimport androidx.cardview.widget.CardView\r\nimport androidx.core.view.isVisible\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.airbnb.lottie.LottieAnimationView\r\nimport com.example.android.forget_it_v0.AuthenticationActivity\r\nimport com.example.android.forget_it_v0.R\r\nimport com.example.android.forget_it_v0.models.Pending\r\nimport com.example.android.forget_it_v0.models.RecyclerViewOnClick\r\nimport pl.droidsonroids.gif.GifImageButton\r\nimport pl.droidsonroids.gif.GifImageView\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\nimport kotlin.random.Random\r\n\r\n@Suppress(\"Deprecation\")\r\nclass UpcomingAdapter (var list: ArrayList<Pending>, var listener : RecyclerViewOnClick):\r\n    RecyclerView.Adapter<UpcomingAdapter.UpcomingViewHolder>() {\r\n\r\n    var flag : String = \"\"\r\n\r\n    inner class UpcomingViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\r\n        var NewDateCV : CardView = itemView.findViewById(R.id.newDateCV)\r\n        var NewDateTV : TextView = itemView.findViewById(R.id.newDateTV)\r\n        var name: TextView = itemView.findViewById(R.id.rv_home_contact_name)\r\n        var reminder: TextView = itemView.findViewById(R.id.rv_reminder)\r\n        var date: TextView = itemView.findViewById(R.id.rv_date)\r\n        var parent_layout: LinearLayout = itemView.findViewById(R.id.upcoming_rv_parent_layout)\r\n        var button_markDone : CardView = itemView.findViewById(R.id.rv_markDone)\r\n        var buttonDelete : CardView = itemView.findViewById(R.id.rv_delete)\r\n        var info: GifImageButton = itemView.findViewById(R.id.infoUpcoming_rv)\r\n\r\n        var image: ImageView = itemView.findViewById(R.id.rv_home_image)\r\n        val personGif : IntArray = intArrayOf(\r\n            R.drawable.pokone,\r\n            R.drawable.poktwo,\r\n            R.drawable.pokthree,\r\n            R.drawable.pokfour,\r\n            R.drawable.pokfive,\r\n            R.drawable.poksix,\r\n            R.drawable.pokseven,\r\n            R.drawable.pokeight,\r\n            R.drawable.poknine,\r\n            R.drawable.pokten,\r\n            R.drawable.pokeleven,\r\n            R.drawable.poktwelve,\r\n            R.drawable.pokthirteen,\r\n        )\r\n        val random = Random\r\n\r\n        fun populate(pending: Pending) {\r\n            name.text = pending.name\r\n            val remin = pending.task.split(\";\").toTypedArray()\r\n            val title = remin[0]\r\n            val desc = remin[1]\r\n            Log.d(\"title\", remin[0]+\"+\"+remin[1])\r\n            reminder.text = title\r\n            image.setImageResource(personGif[random.nextInt(personGif.size)])\r\n\r\n            var dateTimeText = pending.date.toString()\r\n            dateTimeText = dateTimeText.replace(\"-\", \"/\")\r\n            dateTimeText = dateTimeText.replace(\"T\", \", \")\r\n\r\n            date.text = dateTimeText\r\n\r\n            if (pending.pastDeadline) {\r\n                parent_layout.setBackgroundResource(R.drawable.upcoming_rv_border_red)\r\n            }else{\r\n                parent_layout.setBackgroundResource(R.color.colorBackground)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    fun updateList(newList: ArrayList<Pending>) {\r\n        list.clear()\r\n        list.addAll(newList)\r\n        notifyDataSetChanged()\r\n    }\r\n\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): UpcomingViewHolder {\r\n        val inflater = LayoutInflater.from(parent.context)\r\n            .inflate(R.layout.upcoming_rv, parent, false)\r\n        return UpcomingViewHolder(inflater)\r\n    }\r\n\r\n    override fun getItemCount() = list.size\r\n\r\n    override fun onBindViewHolder(holder: UpcomingViewHolder, position: Int) {\r\n        val item = list[position]\r\n        holder.populate(item)\r\n\r\n        val dateFormat = SimpleDateFormat(\"yyyy-MM-dd\")\r\n        val currentDate = dateFormat.format(Date())\r\n        Log.d(\"date\",item.task+\"   \"+(item.date.toString().subSequence(0,10)==currentDate.toString()).toString()+\"  \"+currentDate.toString()+\" \"+item.date.toString().subSequence(0,10))\r\n\r\n\r\n\r\n        if(flag != item.date.toString().subSequence(0,10) && item.date.toString().subSequence(0,10)==currentDate.toString()){\r\n            flag = item.date.toString().subSequence(0,10) as String\r\n            holder.NewDateCV.visibility = View.VISIBLE\r\n            holder.NewDateTV.text = \"Today\"\r\n            Log.d(\"visibility\", \"turn on visibility and set text today\")\r\n        }else if (flag != item.date.toString().subSequence(0,10)){\r\n            flag = item.date.toString().subSequence(0,10) as String\r\n            holder.NewDateCV.visibility = View.VISIBLE\r\n            holder.NewDateTV.text = item.date.toString().subSequence(0,10)\r\n            Log.d(\"visibility\", \"turn on visibility and set text item.date.toString.subSequence(0,10)\")\r\n        }else{\r\n            Log.d(\"visibility\", \"turn off visibility\")\r\n            holder.NewDateCV.visibility = View.GONE\r\n        }\r\n\r\n\r\n\r\n\r\n        holder.button_markDone.setOnClickListener {\r\n            listener.onClick(holder.button_markDone, item, position)\r\n        }\r\n\r\n        holder.info.setOnClickListener{\r\n            listener.onClick(holder.info,item, position)\r\n        }\r\n\r\n\r\n\r\n        holder.buttonDelete.setOnClickListener {\r\n            listener.onClick(holder.buttonDelete, item, position)\r\n        }\r\n//\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/android/forget_it_v0/adapter/UpcomingAdapter.kt	(revision ab01aa50effc130ff44ceb44328d927b5bc865f7)
+++ app/src/main/java/com/example/android/forget_it_v0/adapter/UpcomingAdapter.kt	(date 1627463614967)
@@ -94,6 +94,7 @@
     override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): UpcomingViewHolder {
         val inflater = LayoutInflater.from(parent.context)
             .inflate(R.layout.upcoming_rv, parent, false)
+        
         return UpcomingViewHolder(inflater)
     }
 
Index: app/src/main/java/com/example/android/forget_it_v0/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.android.forget_it_v0\r\n\r\nimport android.app.Activity\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.view.View\r\nimport android.widget.Toast\r\nimport androidx.databinding.DataBindingUtil\r\nimport com.airbnb.lottie.LottieAnimationView\r\nimport com.example.android.forget_it_v0.R\r\nimport com.example.android.forget_it_v0.databinding.ActivityLoginBinding\r\nimport com.example.android.forget_it_v0.databinding.ActivityReportBinding\r\nimport com.firebase.ui.auth.AuthUI\r\nimport com.firebase.ui.auth.ErrorCodes\r\nimport com.firebase.ui.auth.IdpResponse\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport kotlinx.coroutines.delay\r\n\r\n\r\n@Suppress(\"DEPRECATION\")\r\nclass LoginActivity : AppCompatActivity() {\r\n    private lateinit var binding : ActivityLoginBinding\r\n    companion object {\r\n        private const val RC_Sign = 123\r\n    }\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_login)\r\n        createLoginUI()\r\n    }\r\n\r\n\r\n    private fun createLoginUI() {\r\n        val providers = arrayListOf<AuthUI.IdpConfig>(\r\n            AuthUI.IdpConfig.PhoneBuilder().build()\r\n        )\r\n\r\n        startActivityForResult(\r\n            AuthUI.getInstance().createSignInIntentBuilder().setAvailableProviders(providers).setTheme(R.style.loginUI)\r\n                .build(), RC_Sign\r\n        )\r\n    }\r\n\r\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\r\n        super.onActivityResult(requestCode, resultCode, data)\r\n        if (requestCode == RC_Sign) {\r\n            var response = IdpResponse.fromResultIntent(data)\r\n            if (resultCode == Activity.RESULT_OK) {\r\n                val user = FirebaseAuth.getInstance().currentUser\r\n                Handler().postDelayed({\r\n                    binding.SuccessanimationView.visibility = View.VISIBLE\r\n                },4000)\r\n                startActivity(Intent(this, MainActivity::class.java))\r\n            } else {\r\n                if (response == null) {\r\n                    finish()\r\n                }\r\n                if (response?.error?.errorCode == ErrorCodes.NO_NETWORK) {\r\n                    return\r\n                }\r\n                if (response?.error?.errorCode == ErrorCodes.UNKNOWN_ERROR) {\r\n                    Toast.makeText(this, response?.error?.errorCode.toString(), Toast.LENGTH_LONG)\r\n                }\r\n                return\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/android/forget_it_v0/LoginActivity.kt	(revision ab01aa50effc130ff44ceb44328d927b5bc865f7)
+++ app/src/main/java/com/example/android/forget_it_v0/LoginActivity.kt	(date 1627458849468)
@@ -39,7 +39,7 @@
         )
 
         startActivityForResult(
-            AuthUI.getInstance().createSignInIntentBuilder().setAvailableProviders(providers).setTheme(R.style.loginUI)
+            AuthUI.getInstance().createSignInIntentBuilder().setAvailableProviders(providers)
                 .build(), RC_Sign
         )
     }
